<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>

    <LucidVersion>0.0.0.3</LucidVersion>

    <NuGetExe>packages\NuGet.CommandLine.3.3.0\tools\NuGet.exe</NuGetExe>
    <NUnitExe>$(MSBuildThisFileDirectory)\packages\NUnit.Runners.2.6.4\tools\nunit-console.exe</NUnitExe>
    <OpenCoverExe>$(MSBuildThisFileDirectory)\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe</OpenCoverExe>
    <ReportGeneratorExe>$(MSBuildThisFileDirectory)\packages\ReportGenerator.2.4.2.0\tools\ReportGenerator.exe</ReportGeneratorExe>

    <Asterisk>%2A</Asterisk>
    <TestAssembly>$(AssemblyName).dll</TestAssembly>
    <TestOutput>$(AssemblyName).results.xml</TestOutput>
    <TestSuccessFlag>$(OutDir)\$(AssemblyName).success.flg</TestSuccessFlag>
    <CoverageOutput>$(OutDir)\$(AssemblyName).coverage.xml</CoverageOutput>
    <CoverageTarget>75</CoverageTarget>

  </PropertyGroup>

  <ItemGroup>
    <TestDependencies Include="$(OutDir)\$(AssemblyName).dll" />
  </ItemGroup>

  <ItemGroup>
    <CoverFilter Include="-[FluentAssertions$(Asterisk)]$(Asterisk)" />
    <CoverFilter Include="+[$(Asterisk)]$(Asterisk)" />
  </ItemGroup>

  <Target Name="RunTests" Condition="'$(RunTests)'=='true'">

    <Error Text="AssemblyName not set"    Condition="'$(AssemblyName)'==''"     />
    <Error Text="OutDir not set"          Condition="'$(OutDir)'==''"           />

    <CallTarget Targets="ExecuteTests" />

  </Target>

  <Target Name="ExecuteTests" Inputs="@(TestDependencies)" Outputs="$(TestSuccessFlag)">
    <Exec Command="$(OpenCoverExe) -targetdir:$(OutDir) -target:$(NUnitExe) -targetargs:&quot;$(TestAssembly) /result=$(TestOutput)&quot; -register:user -output:$(CoverageOutput) -returntargetcode -filter:&quot;@(CoverFilter, ' ')&quot;" />
    <RemoveDir Directories="$(OutDir)\CoverageReport" />
    <Exec Command="$(ReportGeneratorExe) -reports:$(CoverageOutput) -targetdir:$(OutDir)\CoverageReport -verbosity:Error -ReportTypes:Html;XmlSummary" />
    <!-- grab the summary line coverage value -->
    <XmlPeek XmlInputPath="$(OutDir)\CoverageReport\Summary.xml" Query="CoverageReport/Summary/Linecoverage/text()">
      <Output TaskParameter="Result" ItemName="LineCoveragePercentage" />
    </XmlPeek>
    <!-- strip out the '%' sign from the coverage -->
    <CreateProperty Value="$([System.String]::Copy(&quot;%(LineCoveragePercentage.Identity)&quot;).Replace(&quot;%&quot;, &quot;&quot;))">
      <Output TaskParameter="Value" PropertyName="LineCoverage" />
    </CreateProperty>
    <!-- Fail the build if the coverate isn't high enough -->
    <Warning Text="Expected at least $(CoverageTarget)% coverage, only got $(LineCoverage)% coverage" Condition=" $(LineCoverage) &lt; $(CoverageTarget)" />
    <Touch Files="$(TestSuccessFlag)" AlwaysCreate="true" />
  </Target>

</Project>