<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="PreBuild">

  <Target Name="PreBuild">
    <MSBuild Projects="$(MSBuildThisFileDirectory)Build.csproj" Targets="Restore;Build" Condition="!Exists('$(MSBuildThisFileDirectory)bin\Debug\netcoreapp20\Build.dll')" />
  </Target>

  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)bin\Debug\netcoreapp20\Build.dll" TaskName="Build.ColorExec" />

  <PropertyGroup>

    <Version>0.0.1</Version>

    <CoverageTarget Condition="'$(CoverageTarget)'==''">90</CoverageTarget>

    <BuildUtil>$(MSBuildThisFileDirectory)bin\Debug\netcoreapp20\Build.dll</BuildUtil>
    <AltCover>$(NuGetPackageRoot)altcover\3.5.580\tools\netcoreapp2.0\AltCover.dll</AltCover>
    <VsTestConsole>$(MSBuildExtensionsPath)vstest.console.dll</VsTestConsole>
    <ReportGenerator>$(NuGetPackageRoot)reportgenerator\4.0.0-rc2\tools\netcoreapp2.0\ReportGenerator.dll</ReportGenerator>

    <TestAssembly>$(AssemblyName).dll</TestAssembly>
    <TestSuccessFlag>$(AssemblyName).success.flg</TestSuccessFlag>
    <CoverageOutput>$(AssemblyName).coverage.xml</CoverageOutput>

  </PropertyGroup>

  <ItemGroup>
    <TestDependencies Include="$(OutDir)\$(AssemblyName).dll" />
  </ItemGroup>

  <ItemGroup>
    <CoverageAssemblyFilter Include="NUnit3.TestAdapter" />
  </ItemGroup>

  <Target Name="BeforeBuildComplete" AfterTargets="AfterBuild">
    <CallTarget Targets="RunTests" Condition="$(IsTestProject)=='true'" />
  </Target>

  <Target Name="RunTests" Condition="'$(RunTests)'=='true' or '$(FilterTestFqn)'!=''" Inputs="@(TestDependencies)" Outputs="$(OutDir)$(TestSuccessFlag)">
    <CallTarget Targets="RunTestsWithFilter" Condition="'$(FilterTestFqn)'!=''" />
    <CallTarget Targets="RunTestsWithCoverage" Condition="'$(FilterTestFqn)'==''" />
  </Target>

  <Target Name="RunTestsWithFilter">
    <Message Importance="high" Text="Running VsTestConsole with --testcasefilter:FullyQualifiedName~$(FilterTestFqn)" />
    <Exec Command="dotnet &quot;$(VsTestConsole)&quot; $(TestAssembly) --logger:trx --testcasefilter:FullyQualifiedName~$(FilterTestFqn)" WorkingDirectory="$(OutDir)" />
  </Target>

  <Target Name="RunTestsWithCoverage">
    <PropertyGroup>
      <TestStartTime>$([System.DateTime]::Now.ToString(yyyy-MM-dd HH:mm:ss))</TestStartTime>
    </PropertyGroup>
    <Message Text="TestStartTime=$(TestStartTime)" />
    <Exec WorkingDirectory="$(OutDir)" Command="dotnet $(AltCover) --opencover --save --outputDirectory __Instrumented --xmlReport $(CoverageOutput) --assemblyFilter &quot;@(CoverageAssemblyFilter)&quot; --typeFilter &quot;@(CoverageTypeFilter)&quot; --methodFilter &quot;@(CoverageMethodFilter)&quot; --attributeFilter &quot;@(CoverageAttributeFilter)&quot;" />
    <Exec WorkingDirectory="$(OutDir)\__Instrumented" Command="dotnet.exe &quot;$(VsTestConsole)&quot; $(TestAssembly) --logger:trx" />
    <Exec WorkingDirectory="$(OutDir)" Command="dotnet $(AltCover) Runner --collect -r __Instrumented" />
    <RemoveDir Directories="$(OutDir)CoverageReport" />
    <Exec WorkingDirectory="$(OutDir)" Command="dotnet $(ReportGenerator) -reports:$(CoverageOutput) -targetdir:CoverageReport -verbosity:Error -ReportTypes:Html;XmlSummary" />
    <Exec Command="dotnet &quot;$(BuildUtil)&quot; VerifyCoverage $(CoverageTarget) $(OutDir)CoverageReport/Summary.xml" />
    <Touch Files="$(OutDir)$(TestSuccessFlag)" Time="$(TestStartTime)" AlwaysCreate="true" />
  </Target>

</Project>